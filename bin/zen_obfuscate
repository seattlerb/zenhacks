#!/usr/local/bin/ruby -ws

require 'rbconfig'
begin
  require 'rubygems'
  require_gem 'ParseTree'
rescue LoadError
  require 'parse_tree'
end

require 'ruby2rubyc'

old_classes = []
ObjectSpace.each_object(Class) do |klass|
  old_classes << klass
end

ARGV.each do |name|
  require name
end

new_classes = []
ObjectSpace.each_object(Class) do |klass|
  new_classes << klass
end

new_classes -= old_classes
new_classes = [ eval($c) ] if defined? $c

base_name = new_classes.sort_by{|k| k.name}.first.name
c_file = "#{base_name}.c"
so_file = "#{base_name}.#{Config::CONFIG["DLEXT"]}"

rubytoc = Ruby2RubyC.translator

code = ParseTree.new(false).parse_tree(*new_classes).map do |klass|
  rubytoc.process(klass)
end # rescue nil

source = rubytoc.processors.last.preamble + "\n" + code.join("\n\n") + "\n"

puts "Generated:" if defined? $v
puts source if defined? $v

File.open(c_file, "w") do |f|
  f.write source
end

srcdir  = Config::CONFIG["srcdir"]
archdir = Config::CONFIG["archdir"]
hdrdir = nil
if File.exist? archdir + "/ruby.h" then
  hdrdir = archdir
elsif File.exist? srcdir + "/ruby.h" then
  hdrdir = srcdir
else
  STDERR.puts "ERROR: Can't find header files for ruby. Exiting..."
  exit 1
end

exit 1 unless system "#{Config::CONFIG['LDSHARED']} #{Config::CONFIG['CFLAGS']} -I #{hdrdir} -o #{so_file} #{c_file}"

puts "Compiled and linked #{so_file} from #{c_file}" if defined? $v
